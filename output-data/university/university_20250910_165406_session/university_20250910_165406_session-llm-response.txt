rule(position [ {registrar}; student = student, type [ {transcript}, departments ] departments; {read}; )
rule(position [ {csChair}; student = student, department [ {cs}, type [ {transcript}, departments ] departments; {read}; )
rule(position [ {eeChair}; student = student, department [ {ee}, type [ {transcript}, departments ] departments; {read}; )
rule(position [ {student}, department [ {cs}; type [ {gradebook}, departments ] departments, crs = crs; {readScore}; )
rule(position [ {student}, department [ {ee}; type [ {gradebook}, departments ] departments, crs = crs; {readScore}; )
rule(position [ {student}, department [ {cs}; type [ {gradebook}, departments ] departments, crs = crs; {readMyScores}; crsTaken ] crs)
rule(position [ {student}, department [ {ee}; type [ {gradebook}, departments ] departments, crs = crs; {readMyScores}; crsTaken ] crs)
rule(position [ {staff}, department [ {registrar}; type [ {roster}, departments ] departments, crs = crs; {read, write}; )
rule(position [ {faculty}, department [ {cs}; type [ {gradebook}, departments ] departments, crs = crs; {readScore, addScore, changeScore, assignGrade}; crsTaught ] crs)
rule(position [ {faculty}, department [ {ee}; type [ {gradebook}, departments ] departments, crs = crs; {readScore, addScore, changeScore, assignGrade}; crsTaught ] crs)
rule(position [ {faculty}, department [ {cs}; type [ {roster}, departments ] departments, crs = crs; {read}; crsTaught ] crs)
rule(position [ {faculty}, department [ {ee}; type [ {roster}, departments ] departments, crs = crs; {read}; crsTaught ] crs)
rule(position [ {applicant, student}; student = student, type [ {application}; ; {checkStatus}; )
rule(position [ {staff}, department [ {admissions}; student = student, type [ {application}; ; {read, setStatus}; )
