rule(position [ {registrar}; student = student, type [ {transcript}, departments ] departments; {read};)
rule(position [ {csChair}; student = student, type [ {transcript}, departments ] {cs}; {read};)
rule(position [ {eeChair}; student = student, type [ {transcript}, departments ] {ee}; {read};)
rule(position [ {student}, department ] {cs}; type [ {gradebook}, crs ] crs; {readScore};)
rule(position [ {student}, department ] {ee}; type [ {gradebook}, crs ] crs; {readScore};)
rule(position [ {staff}, department ] {registrar}; type [ {roster}, departments ] departments; {write};)
rule(position [ {faculty}, department ] {ee}; type [ {gradebook}, crs ] crs; {readScore, addScore, assignGrade, changeScore};)
rule(position [ {faculty}, department ] {cs}; type [ {gradebook}, crs ] crs; {readScore, addScore, assignGrade, changeScore, read};)
rule(position [ {faculty}, department ] {ee}; type [ {roster}, crs ] crs; {read};)
rule(position [ {faculty}, department ] {cs}; type [ {roster}, crs ] crs; {read};)
rule(position [ {applicant, student}; type ] {application}, student = uid; {checkStatus};)
rule(position [ {student}; type ] {transcript}, student = uid; {read};)
rule(position [ {applicant}; type ] {application}, student = uid; {checkStatus};)
rule(position [ {staff}, department ] {admissions}; type ] {application}, student = student; {setStatus, read};)
rule(position [ {student}; type ] {gradebook}; {readMyScores, addScore};)
rule(position [ {student}; type ] {roster}, crsTaught ] crs; {read};)
