rule(position [ {registrar}; student = student, type [ {transcript}, departments ] departments; {read}; )
rule(position [ {csChair}; student = student, type [ {transcript}, departments ] {cs}; {read}; )
rule(position [ {admissions}; type [ {application}; {read, setStatus}; )
rule(position [ {faculty}, department [ {ee}; type [ {gradebook}; {readScore, assignGrade, changeScore, addScore}; departments ] {ee}, crs = crs)
rule(position [ {faculty}, department [ {cs}; type [ {gradebook}; {readScore, assignGrade, changeScore, addScore}; departments ] {cs}, crs = crs)
rule(position [ {student}, department [ {cs}; crsTaken ] crs, type [ {gradebook}; {readMyScores, addScore}; departments ] {cs}, crs = crs)
rule(position [ {student}, department [ {ee}; crsTaken ] crs, type [ {gradebook}; {readMyScores, addScore}; departments ] {ee}, crs = crs)
rule(position [ {faculty}, department [ {cs}; type [ {roster}; {read, write}; departments ] {cs}, crs = crs)
rule(position [ {faculty}, department [ {ee}; type [ {roster}; {read, write}; departments ] {ee}, crs = crs)
rule(position [ {staff}, department [ {registrar}; type [ {roster}; {read, write}; departments ] departments, crs = crs)
rule(position [ {student}; student = uid, type [ {application}; {checkStatus}; )
rule(position [ {applicant}; student = uid, type [ {application}; {checkStatus}; )
rule(position [ {student}; student = uid, type [ {transcript}; {read}; departments ] departments)
