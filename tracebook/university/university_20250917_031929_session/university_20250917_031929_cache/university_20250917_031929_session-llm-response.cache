
===============================================================
ITERATION : 0
===============================================================
rule(position [ {registrar}; student = student, departments ] departments, type [ {transcript}; {read}; )
rule(position [ {csChair}; student = student, departments [ {cs}, type [ {transcript}; {read}; )
rule(position [ {eeChair}; student = student, departments [ {ee}, type [ {transcript}; {read}; )
rule(position [ {student}, department [ {cs}; departments [ {cs}, type [ {transcript}, student = uid; {read}; )
rule(position [ {student}, department [ {ee}; departments [ {ee}, type [ {transcript}, student = uid; {read}; )
rule(position [ {student}, department [ {cs}; departments [ {cs}, type [ {gradebook}, crs = crsTaken; {readScore, addScore}; )
rule(position [ {student}, department [ {cs}; type [ {gradebook}, departments [ {cs}, crs = crsTaken; {readMyScores}; )
rule(position [ {student}, department [ {ee}; departments [ {ee}, type [ {gradebook}, crs = crsTaken; {readScore, addScore}; )
rule(position [ {student}, department [ {ee}; type [ {gradebook}, departments [ {ee}, crs = crsTaken; {readMyScores}; )
rule(position [ {csFac1}; type [ {gradebook}, crs ] crsTaught, departments [ {cs}; {addScore, changeScore, readScore, assignGrade}; )
rule(position [ {faculty}, department [ {cs}; departments [ {cs}, type [ {roster}, crs ] crsTaught; {read}; )
rule(position [ {eeFac1}; type [ {gradebook}, crs ] crsTaught, departments [ {ee}; {addScore, changeScore, readScore, assignGrade}; )
rule(position [ {faculty}, department [ {ee}; departments [ {ee}, type [ {roster}, crs ] crsTaught; {read}; )
rule(position [ {admissions}; type [ {application}, student = student; {read, setStatus}; )
rule(position [ {applicant}; type [ {application}, student = uid; {checkStatus}; )
rule(position [ {student}; type [ {application}, student = uid; {checkStatus}; )
rule(position [ {registrar}; departments = departments, type [ {roster}; {read, write}; )
rule(position [ {csFac2}; type [ {gradebook}, crs ] crsTaught, departments [ {cs}; {addScore, changeScore, readScore, assignGrade}; )
rule(position [ {eeFac2}; type [ {gradebook}, crs ] crsTaught, departments [ {ee}; {addScore, changeScore, readScore, assignGrade}; )
